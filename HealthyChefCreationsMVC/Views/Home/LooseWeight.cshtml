@model  HealthyChefCreationsMVC.CustomModels.LooseWeightModel

@{
    ViewBag.Title = "LooseWeight";
    Layout = "~/Views/Shared/_LayoutNoColumns.cshtml";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
<script src="~/Scripts/slickslider.js"></script>

@using (Html.BeginForm("LooseWeight", "Home", FormMethod.Post))
{
    <div class="content">
        <div class="progress" role="progressbar" aria-valuemin="0" aria-valuemax="100">
            <span class="slider__label sr-only"></span>
        </div>
        <div class="slider">
            <div>
                <div class="text">
                    <p>What is your <u>ideal weight</u> that you want to reach?</p>
                    @Html.TextBoxFor(m => m.WeightGoal, new { @type = "number" })kg
                    @*<hr />
                        <button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>What's your height and weight?</p>
                    @Html.TextBoxFor(m => m.Height, new { @type = "number" })cm
                    <hr />
                    @Html.TextBoxFor(m => m.Weight, new { @type = "number" })kg
                    @*<hr />
                        <button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>What is your gender?</p>
                    @Html.RadioButtonFor(m => m.Gender, "Male") Male<br />
                    @Html.RadioButtonFor(m => m.Gender, "Female") Female<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>What is your age?</p>
                    @Html.RadioButtonFor(m => m.Age, "20")20's<br />
                    @Html.RadioButtonFor(m => m.Age, "30")30's<br />
                    @Html.RadioButtonFor(m => m.Age, "40")40's<br />
                    @Html.RadioButtonFor(m => m.Age, "50")50's<br />
                    @Html.RadioButtonFor(m => m.Age, "60")60's<br />
                    @Html.RadioButtonFor(m => m.Age, "70")70+<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Your HealthyChef Creations course is designed by a team of experts to give you 360 degree support</p>
                    @*<button>BACK</button>
                        <button>Got it!</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Men in their 20s who want to reach an ideal weight between 95 kg and 105 kg need a slightly different strategy depending on their current lifestyle. Which best describes you?</p>
                    @Html.RadioButtonFor(m => m.CurrentLifeStyle, "1")My diet and activity need a lot of work<br />
                    @Html.RadioButtonFor(m => m.CurrentLifeStyle, "2")I have some healthy habits<br />
                    @Html.RadioButtonFor(m => m.CurrentLifeStyle, "3")I mostly eat well and stay active<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>As a Man in your 20s, the specific combination of foods you eat can have a huge impact on your ability to burn fat. Which of the following best describes your typical lunch?</p>
                    @Html.RadioButtonFor(m => m.TypicalLunch, "1")I tend to eat sandwiches and/or wraps<br />
                    @Html.RadioButtonFor(m => m.TypicalLunch, "2")I tend to eat soups and salads<br />
                    @Html.RadioButtonFor(m => m.TypicalLunch, "3")Other<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>In addition to WHAT you eat, how OFTEN you eat can impact your metabolism. Which of the following best describes your typical day?</p>
                    @Html.RadioButtonFor(m => m.TypicalDay, "1")I almost always eat 3 or less meals per day<br />
                    @Html.RadioButtonFor(m => m.TypicalDay, "2")I almost always eat at least 3 meals, plus several snacks a day<br />
                    @Html.RadioButtonFor(m => m.TypicalDay, "3")It depends - sometimes less than 3 meals, sometimes more than 3<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Sticking to a plan can be hard, but Noom makes it easy.</p>
                    @*<button>BACK</button>
                        <button>Got it!</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Do you have any significant back issues?</p>
                    @Html.RadioButtonFor(m => m.BackIssue, "1") Yes<br />
                    @Html.RadioButtonFor(m => m.BackIssue, "0") No<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Have you ever been diagnosed with or received treatment for diabetes?</p>
                    @Html.RadioButtonFor(m => m.IsDiabetes, "1") Yes<br />
                    @Html.RadioButtonFor(m => m.IsDiabetes, "0") No<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Have you taken any antibiotic medication in the last 2 years?</p>
                    @Html.RadioButtonFor(m => m.IsAntibiotic, "1") Yes<br />
                    @Html.RadioButtonFor(m => m.IsAntibiotic, "0") No<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>As a Man in your 20s, your environment plays a major role in your ability to lose weight. Which best describes the area you live in?</p>
                    @Html.RadioButtonFor(m => m.LivingArea, "country")The country<br />
                    @Html.RadioButtonFor(m => m.LivingArea, "suburbs")The suburbs<br />
                    @Html.RadioButtonFor(m => m.LivingArea, "city")A major city<br />
                    @*<button>BACK</button>
                        <button>NEXT</button>*@
                </div>
            </div>

            <div>
                <div class="text">
                    <p>Enter your email to see how much weight you can lose for good with Noom.</p>
                    <label>@Html.TextBoxFor(m => m.EmailID)</label>
                    @*<button>BACK</button>
                        <button>SEE MY RESULTS</button>*@
                </div>
            </div>

        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        var $slider = $('.slider');
        var $progressBar = $('.progress');
        var $progressBarLabel = $('.slider__label');

        $slider.on('beforeChange', function (event, slick, currentSlide, nextSlide) {
            var calc = ((nextSlide) / (slick.slideCount - 1)) * 100;

            $progressBar
                .css('background-size', calc + '% 100%')
                .attr('aria-valuenow', calc);

            $progressBarLabel.text(calc + '% completed');
        });

        $slider.slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            speed: 400,
            //dots: true,
        });
    });
</script>

<style>

    /* Slider */
    .slick-slider {
        position: relative;
        display: block;
        box-sizing: border-box;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -webkit-touch-callout: none;
        -khtml-user-select: none;
        -ms-touch-action: pan-y;
        touch-action: pan-y;
        -webkit-tap-highlight-color: transparent;
    }

    .slick-list {
        position: relative;
        display: block;
        overflow: hidden;
        margin: 0;
        padding: 0;
    }

        .slick-list:focus {
            outline: none;
        }

        .slick-list.dragging {
            cursor: pointer;
            cursor: hand;
        }

    .slick-slider .slick-track,
    .slick-slider .slick-list {
        -webkit-transform: translate3d(0, 0, 0);
        -moz-transform: translate3d(0, 0, 0);
        -ms-transform: translate3d(0, 0, 0);
        -o-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }

    .slick-track {
        position: relative;
        top: 0;
        left: 0;
        display: block;
    }

        .slick-track:before,
        .slick-track:after {
            display: table;
            content: '';
        }

        .slick-track:after {
            clear: both;
        }

    .slick-loading .slick-track {
        visibility: hidden;
    }

    .slick-slide {
        display: none;
        float: left;
        height: 100%;
        min-height: 1px;
    }

    [dir='rtl'] .slick-slide {
        float: right;
    }

    .slick-slide img {
        display: block;
    }

    .slick-slide.slick-loading img {
        display: none;
    }

    .slick-slide.dragging img {
        pointer-events: none;
    }

    .slick-initialized .slick-slide {
        display: block;
    }

    .slick-loading .slick-slide {
        visibility: hidden;
    }

    .slick-vertical .slick-slide {
        display: block;
        height: auto;
        border: 1px solid transparent;
    }

    .slick-arrow.slick-hidden {
        display: none;
    }


    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        opacity: 1;
    }

    .progress {
        display: block;
        width: 100%;
        height: 10px;
        border-radius: 10px;
        overflow: hidden;
        background-color: #f5f5f5;
        background-image: linear-gradient(to right, #39aa35, #39aa35);
        background-repeat: no-repeat;
        background-size: 0 100%;
        transition: background-size .4s ease-in-out;
    }

    body {
        background-color: #fff;
    }

    .content {
        margin: auto;
        padding: 20px;
        width: 600px;
    }

    .slider {
        margin: 30px auto 50px;
    }

    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0,0,0,0);
        border: 0;
    }

    .text {
        padding: 30px;
    }

    .slick-prev,
    .slick-next {
        top: 50%;
        display: block;
        /*height: 20px;
        width: 30px;*/
        line-height: 0px;
        font-size: 20px;
        cursor: pointer;
        /*background: transparent;
        color: transparent;*/
        top: 50%;
        margin-top: -10px;
        padding: 0;
        border: none;
    }
</style>
